<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AccountOwnerServer</name>
    </assembly>
    <members>
        <member name="T:AccountEmployeeServer.Controllers.AccountController">
            <summary>
            AccountController
            </summary>
        </member>
        <member name="M:AccountEmployeeServer.Controllers.AccountController.#ctor(Contracts.ILoggerManager,Contracts.IRepositoryWrapper)">
            <summary>
            AccountController
            </summary>
            <param name="logger"></param>
            <param name="repository"></param>
        </member>
        <member name="M:AccountEmployeeServer.Controllers.AccountController.GetAccountsForEmployee(System.Guid,Entities.Models.AccountParameters)">
            <summary>
            GetAccountsForEmployee
            </summary>
            <param name="employeeId"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:AccountEmployeeServer.Controllers.AccountController.GetAccountForEmployee(System.Guid,System.Guid,System.String)">
            <summary>
            GetAccountForEmployee
            </summary>
            <param name="employeeId"></param>
            <param name="id"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="T:AccountEmployeeServer.Controllers.EmployeeController">
            <summary>
            EmployeeController
            </summary>
        </member>
        <member name="M:AccountEmployeeServer.Controllers.EmployeeController.#ctor(Contracts.ILoggerManager,Contracts.IRepositoryWrapper)">
            <summary>
            EmployeeController
            </summary>
            <param name="logger"></param>
            <param name="repository"></param>
        </member>
        <member name="M:AccountEmployeeServer.Controllers.EmployeeController.GetEmployees(Entities.Models.EmployeeParameters)">
            <summary>
            GetEmployees
            </summary>
            <param name="employeeParameters"></param>
            <returns></returns>
        </member>
        <member name="M:AccountEmployeeServer.Controllers.EmployeeController.GetEmployeeById(System.Guid,System.String)">
            <summary>
            GetEmployeeById
            </summary>
            <param name="id"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:AccountEmployeeServer.Controllers.EmployeeController.CreateEmployee(Entities.Models.Employee)">
            <summary>
            CreateEmployee
            </summary>
            <param name="employee"></param>
            <returns></returns>
        </member>
        <member name="M:AccountEmployeeServer.Controllers.EmployeeController.UpdateEmployee(System.Guid,Entities.Models.Employee)">
            <summary>
            UpdateEmployee
            </summary>
            <param name="id"></param>
            <param name="employee"></param>
            <returns></returns>
        </member>
        <member name="M:AccountEmployeeServer.Controllers.EmployeeController.DeleteEmployee(System.Guid)">
            <summary>
            DeleteEmployee
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:AccountEmployeeServer.Extensions.ServiceExtensions">
            <summary>
            ServiceExtensions
            </summary>
        </member>
        <member name="M:AccountEmployeeServer.Extensions.ServiceExtensions.ConfigureCors(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            ConfigureCors
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:AccountEmployeeServer.Extensions.ServiceExtensions.ConfigureIISIntegration(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            ConfigureIISIntegration
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:AccountEmployeeServer.Extensions.ServiceExtensions.ConfigureLoggerService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            ConfigureLoggerService
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:AccountEmployeeServer.Extensions.ServiceExtensions.ConfigureMySqlContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            ConfigureMySqlContext
            </summary>
            <param name="services"></param>
            <param name="config"></param>
        </member>
        <member name="M:AccountEmployeeServer.Extensions.ServiceExtensions.ConfigureMsSqlContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            ConfigureMsSqlContext
            </summary>
            <param name="services"></param>
            <param name="config"></param>
        </member>
        <member name="M:AccountEmployeeServer.Extensions.ServiceExtensions.ConfigureRepositoryWrapper(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            ConfigureRepositoryWrapper
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:AccountEmployeeServer.Program">
            <summary>
            Program
            </summary>
        </member>
        <member name="M:AccountEmployeeServer.Program.Main(System.String[])">
            <summary>
            Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:AccountEmployeeServer.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            CreateWebHostBuilder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:AccountEmployeeServer.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="M:AccountEmployeeServer.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Startup
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:AccountEmployeeServer.Startup.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:AccountEmployeeServer.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:AccountEmployeeServer.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
